// <auto-generated />
using System;
using Basket_Store_MS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Basket_Store_MS.Migrations
{
    [DbContext(typeof(BasketStoreDBContext))]
    [Migration("20220517040238_Add-Tables-Schema")]
    partial class AddTablesSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Basket_Store_MS.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.CartProduct", b =>
                {
                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("CartId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartProduct");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Beauty"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Clothes"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mobiles"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Computers & accessories"
                        },
                        new
                        {
                            Id = 5,
                            Name = "TV & Home Entertainment"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Furniture"
                        });
                });

            modelBuilder.Entity("Basket_Store_MS.Models.Favourite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Favourite");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.FavouriteProduct", b =>
                {
                    b.Property<int>("FavouriteId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("FavouriteId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("FavouriteProduct");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.FeedBack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FeedBackDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductsId");

                    b.HasIndex("UserId");

                    b.ToTable("FeedBacks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FeedBackDescription = "Realy good",
                            ProductsId = 1,
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 2,
                            FeedBackDescription = "Bad",
                            ProductsId = 2,
                            Rating = 1.0
                        },
                        new
                        {
                            Id = 3,
                            FeedBackDescription = "Amazing",
                            ProductsId = 4,
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 4,
                            FeedBackDescription = "Cool",
                            ProductsId = 6,
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 5,
                            FeedBackDescription = "Butifull",
                            ProductsId = 9,
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 6,
                            FeedBackDescription = "Good one",
                            ProductsId = 20,
                            Rating = 4.0
                        },
                        new
                        {
                            Id = 7,
                            FeedBackDescription = "Nice",
                            ProductsId = 34,
                            Rating = 4.0
                        },
                        new
                        {
                            Id = 8,
                            FeedBackDescription = "Amazing",
                            ProductsId = 35,
                            Rating = 4.0
                        },
                        new
                        {
                            Id = 9,
                            FeedBackDescription = "Fantastic",
                            ProductsId = 41,
                            Rating = 4.0
                        },
                        new
                        {
                            Id = 10,
                            FeedBackDescription = "look very good",
                            ProductsId = 42,
                            Rating = 4.0
                        },
                        new
                        {
                            Id = 11,
                            FeedBackDescription = "nice one",
                            ProductsId = 44,
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 12,
                            FeedBackDescription = "good one",
                            ProductsId = 49,
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 13,
                            FeedBackDescription = "realy amazing",
                            ProductsId = 56,
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 14,
                            FeedBackDescription = "butifull",
                            ProductsId = 59,
                            Rating = 5.0
                        },
                        new
                        {
                            Id = 15,
                            FeedBackDescription = "good",
                            ProductsId = 61,
                            Rating = 5.0
                        });
                });

            modelBuilder.Entity("Basket_Store_MS.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTypes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("Discount")
                        .HasColumnType("bit");

                    b.Property<int>("InStock")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Discount = true,
                            InStock = 150,
                            Name = "Liner & Colossal Kajal",
                            Price = 15.5,
                            ProductDescription = "Maybelline New York Colossal Bold Liner & Colossal Kajal - EYE KIT COMBO (Pack Of 2), 0.35 gm + 3 ml"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Discount = true,
                            InStock = 120,
                            Name = "Blushes",
                            Price = 20.0,
                            ProductDescription = "URBANMAC Premium Synthetic Kabuki Foundation Face Powder Blush Eyeshadow Brush Makeup Brush Kit with Blender Sponge and Brush Cleaner - Makeup Brushes Set"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Discount = false,
                            InStock = 250,
                            Name = "Foundation ",
                            Price = 50.0,
                            ProductDescription = "Coloressence Full Coverage Waterproof Lightweight Matte Formula Opaque Lotion High Definition Foundation (HDF-2) with Set of 2 Blending Sponge"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Discount = false,
                            InStock = 60,
                            Name = "Concealer ",
                            Price = 35.0,
                            ProductDescription = "Wiffy Concealer Base Palette 15 In 1 Cream Kit Concealer"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Discount = false,
                            InStock = 120,
                            Name = "Gloss ",
                            Price = 15.0,
                            ProductDescription = "RENEE See Me Shine Lip Gloss For All Skin Tone, Enriched with Jojoba Oil, Non Sticky, Hydrating, Easy Glide Formula, Pucker Up Peach 2.5ml"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            Discount = true,
                            InStock = 134,
                            Name = "Makeup Fixer",
                            Price = 25.0,
                            ProductDescription = "Swiss Beauty Makeup Fixer Natural Aloe Vera With Vitamin-E, Face Makeup, White, 70Ml"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            Discount = true,
                            InStock = 234,
                            Name = "Concealer Palette",
                            Price = 35.0,
                            ProductDescription = "Insight Cosmetics Pro Concealer Palette (Concealer)"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 1,
                            Discount = false,
                            InStock = 132,
                            Name = "Contour De Force",
                            Price = 45.0,
                            ProductDescription = "SUGAR Cosmetics - Contour De Force - Face Palette with Lightweight Blush, Highlighter And Bronzer - 01 Subtle Summit - Long Lasting Contour Blush Palette"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            Discount = false,
                            InStock = 200,
                            Name = "Eyeshadow Palette",
                            Price = 100.0,
                            ProductDescription = "Swiss Beauty Ultimate 9 Color Eyeshadow Palette, Eye MakeUp, Multicolor-06, 6gm"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 1,
                            Discount = true,
                            InStock = 213,
                            Name = "Nude and Rose Gold Eyeshadow",
                            Price = 150.0,
                            ProductDescription = "URBANMAC Nude and Rose Gold Eyeshadow Palette combo"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            Discount = false,
                            InStock = 120,
                            Name = "Eyelashes with Eye Glue",
                            Price = 25.0,
                            ProductDescription = "URBANMAC Black Handmade Natural Thick Long Polyester False Eyelashes with Eye Glue"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 1,
                            Discount = false,
                            InStock = 134,
                            Name = "Eye Lash Curler",
                            Price = 23.0,
                            ProductDescription = "Vega Premium Eye Lash Curler"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 1,
                            Discount = true,
                            InStock = 145,
                            Name = "Liquid Eyeshadow",
                            Price = 45.0,
                            ProductDescription = "Swiss Beauty Metallic Liquid Eyeshadow Non-Transfer & Insta Dry, Eye Makeup, Shade-03, 2.25Ml"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 1,
                            Discount = false,
                            InStock = 154,
                            Name = "Eyeshadow Palette",
                            Price = 123.0,
                            ProductDescription = "MARS Glitter Eyeshadow Palette 7.65 g (multicolor)"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            Discount = true,
                            InStock = 100,
                            Name = "Brightening Eye",
                            Price = 43.0,
                            ProductDescription = "Kiro Long Wear Brightening Eye Shadow Stick, Nude Pearl, 1.4 g"
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            Discount = false,
                            InStock = 123,
                            Name = "Cotton Born Baby",
                            Price = 15.0,
                            ProductDescription = "HIKIPO Presents 100% Cotton Born Baby Summer Wear Baby Clothes Sets For Gift"
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 2,
                            Discount = true,
                            InStock = 234,
                            Name = "Kid's Cotton Combo Pack Of 3 Clothing Set",
                            Price = 243.0,
                            ProductDescription = "Babyblossom Baby Kid's Cotton Combo Pack Of 3 Clothing Set ( 3 Top And 3 Bottom) (1112,Multicolor,0-3 Months)"
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 2,
                            Discount = false,
                            InStock = 235,
                            Name = "Men's Regular Fit T-Shirt",
                            Price = 120.0,
                            ProductDescription = "Scott International Men's Regular Fit T-Shirt (Pack of 3)"
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 2,
                            Discount = true,
                            InStock = 21,
                            Name = "Basics Half Crew Printed T Shirt",
                            Price = 20.0,
                            ProductDescription = "DAMENSCH Better Basics Half Crew Printed T Shirt"
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 2,
                            Discount = false,
                            InStock = 567,
                            Name = "Regular T-Shirt",
                            Price = 23.0,
                            ProductDescription = "Puma Men's Regular T-Shirt"
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 2,
                            Discount = true,
                            InStock = 234,
                            Name = "Relaxed Jeans",
                            Price = 42.0,
                            ProductDescription = "Ben Martin Men's Relaxed Jeans"
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 2,
                            Discount = true,
                            InStock = 76,
                            Name = "Women's Slim Jeans",
                            Price = 132.0,
                            ProductDescription = "Van Heusen Women's Slim Jeans"
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 2,
                            Discount = true,
                            InStock = 345,
                            Name = "Pant for Men",
                            Price = 21.0,
                            ProductDescription = "TADEO Stylish Cargo Pant for Men | Army Print Pant for Women | Unisex Joggers Cammando Pants for Boys & Girls | Regular Fit Militry Jeans for Man with Multi Pockets"
                        },
                        new
                        {
                            Id = 24,
                            CategoryId = 2,
                            Discount = false,
                            InStock = 235,
                            Name = "Girl's Easter Dress",
                            Price = 15.0,
                            ProductDescription = "Bonnie Jean Girl's Easter Dress - Yellow Bunny Smocked Dress for Baby Toddler and Little Girls"
                        },
                        new
                        {
                            Id = 25,
                            CategoryId = 2,
                            Discount = true,
                            InStock = 231,
                            Name = "Pack Eyelet Lace Trim And Lace Trim Sock",
                            Price = 35.0,
                            ProductDescription = "Jefferies Socks 2 Pack Eyelet Lace Trim And Lace Trim Sock - White/White, 12-24 Months"
                        },
                        new
                        {
                            Id = 26,
                            CategoryId = 2,
                            Discount = false,
                            InStock = 125,
                            Name = "Baby Tight",
                            Price = 45.0,
                            ProductDescription = "Jefferies Socks Microfiber Rhumba Baby Tight White/White, 6-18 Months"
                        },
                        new
                        {
                            Id = 27,
                            CategoryId = 2,
                            Discount = false,
                            InStock = 21,
                            Name = "Girls' Dress",
                            Price = 24.0,
                            ProductDescription = "Bonnie Jean Little Girls' Dress Sweater with Sequin Trim to Allover Sequin Skirt"
                        },
                        new
                        {
                            Id = 28,
                            CategoryId = 2,
                            Discount = true,
                            InStock = 543,
                            Name = "Knee-Long Dress",
                            Price = 54.0,
                            ProductDescription = "A.T.U.N Girl's Synthetic Bubble Hem Knee-Long Dress (GDRS TOD SFY_Amber 2_2-3 YR)"
                        },
                        new
                        {
                            Id = 29,
                            CategoryId = 2,
                            Discount = false,
                            InStock = 143,
                            Name = "A-line Long Gown",
                            Price = 120.0,
                            ProductDescription = "Royal Export Women's Heavy Net A-line Long Gown"
                        },
                        new
                        {
                            Id = 30,
                            CategoryId = 2,
                            Discount = true,
                            InStock = 123,
                            Name = "Women's Polyester A-Line Above The Knee Dress",
                            Price = 15.0,
                            ProductDescription = "Lymio Women's Polyester A-Line Above The Knee Dress"
                        },
                        new
                        {
                            Id = 31,
                            CategoryId = 3,
                            Discount = true,
                            InStock = 345,
                            Name = "iQOO 9 SE",
                            Price = 123.0,
                            ProductDescription = "iQOO 9 SE 5G (Sunset Sierra, 8GB RAM, 128GB Storage) | Qualcomm Snapdragon 888 | 66W Flash Charge"
                        },
                        new
                        {
                            Id = 32,
                            CategoryId = 3,
                            Discount = false,
                            InStock = 43,
                            Name = "narzo 50",
                            Price = 200.0,
                            ProductDescription = "realme narzo 50 (Speed Blue, 4GB RAM+64GB Storage) Helio G96 Processor | 50MP AI Triple Camera | 120Hz Ultra Smooth Display"
                        },
                        new
                        {
                            Id = 33,
                            CategoryId = 3,
                            Discount = false,
                            InStock = 235,
                            Name = "iQ1O 9 Pro",
                            Price = 300.0,
                            ProductDescription = "iQOO 9 Pro 5G (Legend, 8GB RAM, 256GB Storage) | Snapdragon 8 Gen 1 Mobile Processor | 120W FlashCharge | Upto 12 Months No Cost EMI"
                        },
                        new
                        {
                            Id = 34,
                            CategoryId = 3,
                            Discount = true,
                            InStock = 435,
                            Name = "narzo 50A",
                            Price = 325.0,
                            ProductDescription = "realme narzo 50A (Oxygen Blue , 4GB RAM + 64 GB Storage) Helio G85 Processor | 50MP AI Triple Camera | 6000 mAh Battery"
                        },
                        new
                        {
                            Id = 35,
                            CategoryId = 3,
                            Discount = true,
                            InStock = 343,
                            Name = "iQOO Z6 5G",
                            Price = 432.0,
                            ProductDescription = "iQOO Z6 5G (Chromatic Blue, 6GB RAM, 128GB Storage) | Snapdragon 695-6nm Processor | 120Hz FHD+ Display | 5000mAh Battery"
                        },
                        new
                        {
                            Id = 36,
                            CategoryId = 3,
                            Discount = true,
                            InStock = 543,
                            Name = "Oppo A54",
                            Price = 123.0,
                            ProductDescription = "Oppo A54 (Starry Blue, 6GB RAM, 128GB Storage) with No Cost EMI & Additional Exchange Offers"
                        },
                        new
                        {
                            Id = 37,
                            CategoryId = 3,
                            Discount = true,
                            InStock = 353,
                            Name = "Tecno Spark 8 Pro",
                            Price = 432.0,
                            ProductDescription = "Tecno Spark 8 Pro (Turquoise Cyan, 7GB Expandable RAM 64GB Storage) 33W Fast Charger | Helio G85 Gaming Processor"
                        },
                        new
                        {
                            Id = 38,
                            CategoryId = 3,
                            Discount = false,
                            InStock = 654,
                            Name = "Vivo Y73",
                            Price = 543.0,
                            ProductDescription = "Vivo Y73 (Roman Black, 8GB RAM, 128GB Storage) with No Cost EMI/Additional Exchange Offers"
                        },
                        new
                        {
                            Id = 39,
                            CategoryId = 3,
                            Discount = false,
                            InStock = 465,
                            Name = "Tecno Pop 5",
                            Price = 121.0,
                            ProductDescription = "Tecno Pop 5 LTE(Turquoise Cyan 2G+32GB)| 6.52 HD + Dot Notch | 5000mAh | 8MP Dual Camera | Front Flash |"
                        },
                        new
                        {
                            Id = 40,
                            CategoryId = 3,
                            Discount = true,
                            InStock = 143,
                            Name = "OPPO A15s",
                            Price = 123.0,
                            ProductDescription = "OPPO A15s (Dynamic Black, 4GB, 128GB Storage) AI Triple Camera | 6.52 HD+ Screen | 2.3GHz Mediatek Helio P35 Octa Core Processor"
                        },
                        new
                        {
                            Id = 41,
                            CategoryId = 3,
                            Discount = false,
                            InStock = 365,
                            Name = "Tecno Spark 8 Pro",
                            Price = 454.0,
                            ProductDescription = "Tecno Spark 8 Pro (Turquoise Cyan, 7GB Expandable RAM 64GB Storage) 33W Fast Charger | Helio G85 Gaming Processor | 6.8 FHD + Dot -in Display | 48MP Triple Camera"
                        },
                        new
                        {
                            Id = 42,
                            CategoryId = 3,
                            Discount = false,
                            InStock = 154,
                            Name = "Vivo Y73",
                            Price = 132.0,
                            ProductDescription = "Vivo Y73 (Roman Black, 8GB RAM, 128GB Storage) with No Cost EMI/Additional Exchange Offers"
                        },
                        new
                        {
                            Id = 43,
                            CategoryId = 3,
                            Discount = true,
                            InStock = 677,
                            Name = "OnePlus Nord CE",
                            Price = 345.0,
                            ProductDescription = "OnePlus Nord CE 2 5G (Bahamas Blue, 8GB RAM, 128GB Storage)"
                        },
                        new
                        {
                            Id = 44,
                            CategoryId = 3,
                            Discount = false,
                            InStock = 122,
                            Name = "Samsung Galaxy M33",
                            Price = 612.0,
                            ProductDescription = "Samsung Galaxy M33 5G (Deep Ocean Blue, 6GB, 128GB Storage) | Travel Adapter to be Purchased Separately"
                        },
                        new
                        {
                            Id = 45,
                            CategoryId = 3,
                            Discount = false,
                            InStock = 111,
                            Name = "Redmi Note 11",
                            Price = 132.0,
                            ProductDescription = "Redmi Note 11 (Horizon Blue, 4GB RAM, 64GB Storage) | 90Hz FHD+ AMOLED Display | Qualcomm® Snapdragon™ 680-6nm | Alexa Built-in | 33W Charger Included"
                        },
                        new
                        {
                            Id = 46,
                            CategoryId = 3,
                            Discount = true,
                            InStock = 143,
                            Name = "OnePlus Nord CE",
                            Price = 243.0,
                            ProductDescription = "OnePlus Nord CE 2 Lite 5G (Blue Tide, 6GB RAM, 128GB Storage)"
                        },
                        new
                        {
                            Id = 47,
                            CategoryId = 3,
                            Discount = true,
                            InStock = 700,
                            Name = "iPhone 12",
                            Price = 343.0,
                            ProductDescription = "Apple iPhone 12 (64GB) - White"
                        },
                        new
                        {
                            Id = 48,
                            CategoryId = 3,
                            Discount = false,
                            InStock = 700,
                            Name = "Samsung Galaxy M12",
                            Price = 123.0,
                            ProductDescription = "Samsung Galaxy M12 (Black,4GB RAM, 64GB Storage) 6000 mAh with 8nm Processor | True 48 MP Quad Camera | 90Hz Refresh Rate"
                        },
                        new
                        {
                            Id = 49,
                            CategoryId = 4,
                            Discount = false,
                            InStock = 577,
                            Name = "Introducing Fire TV Stick 4K Max streaming device",
                            Price = 444.0,
                            ProductDescription = "Introducing Fire TV Stick 4K Max streaming device, Alexa Voice Remote (includes TV controls)| 2021 release"
                        },
                        new
                        {
                            Id = 50,
                            CategoryId = 4,
                            Discount = true,
                            InStock = 87,
                            Name = "DishTV HD DTH Set Top Box",
                            Price = 334.0,
                            ProductDescription = "DishTV HD DTH Set Top Box with 12 Month FTA Hindi Pack + Installation"
                        },
                        new
                        {
                            Id = 51,
                            CategoryId = 4,
                            Discount = true,
                            InStock = 76,
                            Name = "Catvision Doordarshan Freedish MPEG 2",
                            Price = 144.0,
                            ProductDescription = "Catvision Doordarshan Freedish MPEG 2 Standard Definition Set Top Box for FreeDish 90+ Channels (Black)"
                        },
                        new
                        {
                            Id = 52,
                            CategoryId = 4,
                            Discount = false,
                            InStock = 98,
                            Name = "LG 121.9 cm",
                            Price = 345.0,
                            ProductDescription = "LG 121.9 cm (48 inches) 4K Ultra HD Smart OLED TV 48A1PTZ (Dark Meteo Titan) (2021 Model)"
                        },
                        new
                        {
                            Id = 53,
                            CategoryId = 4,
                            Discount = true,
                            InStock = 65,
                            Name = "LG 164 cm",
                            Price = 223.0,
                            ProductDescription = "LG 164 cm (65 inches) 4K Ultra HD Smart OLED TV 65CXPTA (Dark Steel Silver) (2020 Model)"
                        },
                        new
                        {
                            Id = 54,
                            CategoryId = 4,
                            Discount = true,
                            InStock = 98,
                            Name = "Croma 80 cm",
                            Price = 243.0,
                            ProductDescription = "Croma 80 cm (32 Inches) HD Ready LED TV CREL7369 (Black)"
                        },
                        new
                        {
                            Id = 55,
                            CategoryId = 4,
                            Discount = false,
                            InStock = 65,
                            Name = "Redmi 80 cm",
                            Price = 654.0,
                            ProductDescription = "Redmi 80 cm (32 inches) HD Ready Smart LED TV | L32M6-RA/L32M7-RA (Black) (2021 Model) | With Android 11"
                        },
                        new
                        {
                            Id = 56,
                            CategoryId = 4,
                            Discount = false,
                            InStock = 456,
                            Name = "OnePlus 80 cm (32 inches)",
                            Price = 243.0,
                            ProductDescription = "OnePlus 80 cm (32 inches) Y Series HD Ready Smart Android LED TV 32 Y1S (Black) (2022 Model)"
                        },
                        new
                        {
                            Id = 57,
                            CategoryId = 4,
                            Discount = false,
                            InStock = 65,
                            Name = "Redmi 80 cm (32 inches)",
                            Price = 432.0,
                            ProductDescription = "Redmi 80 cm (32 inches) HD Ready Smart LED TV | L32M6-RA/L32M7-RA (Black) (2021 Model) | With Android 11"
                        },
                        new
                        {
                            Id = 58,
                            CategoryId = 4,
                            Discount = true,
                            InStock = 565,
                            Name = "Mi 138.8 cm",
                            Price = 143.0,
                            ProductDescription = "Mi 138.8 cm (55 Inches) 4K Ultra HD Android Smart LED TV 4X | L55M5-5XIN (Black)"
                        },
                        new
                        {
                            Id = 59,
                            CategoryId = 4,
                            Discount = false,
                            InStock = 565,
                            Name = "Tronica TR-1501 Deep Bass Home Theater with Subwoofer 2.1",
                            Price = 321.0,
                            ProductDescription = "Tronica TR-1501 Deep Bass Home Theater with Subwoofer 2.1 Channel with 55W Premium Signature Sound, Multiple Connectivity Modes, Master Remote and Sleek Finish (Black)"
                        },
                        new
                        {
                            Id = 60,
                            CategoryId = 4,
                            Discount = true,
                            InStock = 56,
                            Name = "Sturdy Flat Cable",
                            Price = 321.0,
                            ProductDescription = "boAt Type C A750 Stress Resistant, Tangle-free, Sturdy Flat Cable with 6.5A Fast Charging & 480Mbps Data Transmission, 10000+ Bends Lifespan and Extended 1.5m Length(Radiant Red)"
                        },
                        new
                        {
                            Id = 61,
                            CategoryId = 5,
                            Discount = false,
                            InStock = 100,
                            Name = "Engineered Wood Platform Bed with Storage",
                            Price = 750.0,
                            ProductDescription = "Wakefit Queen Size Taurus Engineered Wood Platform Bed with Storage - (Matte Finish_Brown)"
                        },
                        new
                        {
                            Id = 62,
                            CategoryId = 5,
                            Discount = true,
                            InStock = 34,
                            Name = "Outdoor Balcony Garden Coffee Table Set",
                            Price = 432.0,
                            ProductDescription = "Corazzin Garden Patio Seating Chair and Table Set Outdoor Balcony Garden Coffee Table Set Furniture with 1 Table and 2 Chairs Set (Black)"
                        },
                        new
                        {
                            Id = 63,
                            CategoryId = 5,
                            Discount = true,
                            InStock = 34,
                            Name = "Wooden Fold-able Side Table",
                            Price = 232.0,
                            ProductDescription = "UHUD CRAFTS Beautiful Antique Wooden Fold-able Side Table/End Table/Plant Stand/Stool Living Room Kids Play Furniture Table Round Shape"
                        },
                        new
                        {
                            Id = 64,
                            CategoryId = 5,
                            Discount = false,
                            InStock = 54,
                            Name = "Portable Chair",
                            Price = 243.0,
                            ProductDescription = "Wakefit Stargazer Manual Single Seater Recliner (Leatherette, Brown)"
                        },
                        new
                        {
                            Id = 65,
                            CategoryId = 5,
                            Discount = true,
                            InStock = 345,
                            Name = "3 Seater Sofa",
                            Price = 654.0,
                            ProductDescription = "Wakefit Snoozer 3 Seater Sofa (Fabric, Cobalt Blue)"
                        },
                        new
                        {
                            Id = 66,
                            CategoryId = 5,
                            Discount = false,
                            InStock = 54,
                            Name = "Beds Covers",
                            Price = 354.0,
                            ProductDescription = "Fashion String 144 TC Microfibre Brown Double Bedsheet with 2 King Size Pillow Covers"
                        },
                        new
                        {
                            Id = 67,
                            CategoryId = 5,
                            Discount = false,
                            InStock = 45,
                            Name = "Blackout Curtains",
                            Price = 121.0,
                            ProductDescription = "Room Darkening Thermal Insulated Eyelet Noise Reducing Blackout Curtains for Bedroom with Tie Backs- Black (9 Feet - Long Door) 1 Piece"
                        },
                        new
                        {
                            Id = 68,
                            CategoryId = 5,
                            Discount = true,
                            InStock = 54,
                            Name = "Dining Table 6 Seater",
                            Price = 432.0,
                            ProductDescription = "Driftingwood Dining Table 6 Seater | Six Seater Dinning Table with Chairs | Dining Room Sets | Sheesham Wood, Honey Finish"
                        },
                        new
                        {
                            Id = 69,
                            CategoryId = 5,
                            Discount = false,
                            InStock = 543,
                            Name = "Air Cooler",
                            Price = 345.0,
                            ProductDescription = "Bajaj PMH 25 DLX 24L Personal Air Cooler with Honeycomb Pads, Turbo Fan Technology, Powerful Air Throw and 3-Speed Control, White,PMH25 DLX"
                        },
                        new
                        {
                            Id = 70,
                            CategoryId = 5,
                            Discount = true,
                            InStock = 234,
                            Name = "Bonnell Spring Mattress Maroon",
                            Price = 400.0,
                            ProductDescription = "Hypnos Caspio Ortho 8 Inch Medium Firm Single Size Bonnell Spring Mattress Maroon (72X30X08)"
                        },
                        new
                        {
                            Id = 71,
                            CategoryId = 5,
                            Discount = false,
                            InStock = 154,
                            Name = "2 Door TV Cabinet with Drawers",
                            Price = 544.0,
                            ProductDescription = "Amazon Brand - Solimo Cygnus Engineered Wood 2 Door TV Cabinet with Drawers ( Brown, Sienna Cherry)"
                        },
                        new
                        {
                            Id = 72,
                            CategoryId = 5,
                            Discount = true,
                            InStock = 325,
                            Name = "Hand Made Jute Throw Cushion Covers",
                            Price = 299.0,
                            ProductDescription = "AEROHAVEN™ Set of 5 Decorative Hand Made Jute Throw/Pillow Cushion Covers - (16 X 16 INCHES)"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.Cart", b =>
                {
                    b.HasOne("Basket_Store_MS.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.CartProduct", b =>
                {
                    b.HasOne("Basket_Store_MS.Models.Cart", "Cart")
                        .WithMany("CartProducts")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Basket_Store_MS.Models.Products", "Products")
                        .WithMany("CartProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.Favourite", b =>
                {
                    b.HasOne("Basket_Store_MS.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.FavouriteProduct", b =>
                {
                    b.HasOne("Basket_Store_MS.Models.Favourite", "Favourite")
                        .WithMany("FavouriteProducts")
                        .HasForeignKey("FavouriteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Basket_Store_MS.Models.Products", "Products")
                        .WithMany("FavouriteProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Favourite");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.FeedBack", b =>
                {
                    b.HasOne("Basket_Store_MS.Models.Products", "Products")
                        .WithMany("FeedBack")
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Basket_Store_MS.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.PaymentType", b =>
                {
                    b.HasOne("Basket_Store_MS.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.Products", b =>
                {
                    b.HasOne("Basket_Store_MS.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Basket_Store_MS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Basket_Store_MS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Basket_Store_MS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Basket_Store_MS.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Basket_Store_MS.Models.Cart", b =>
                {
                    b.Navigation("CartProducts");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.Favourite", b =>
                {
                    b.Navigation("FavouriteProducts");
                });

            modelBuilder.Entity("Basket_Store_MS.Models.Products", b =>
                {
                    b.Navigation("CartProducts");

                    b.Navigation("FavouriteProducts");

                    b.Navigation("FeedBack");
                });
#pragma warning restore 612, 618
        }
    }
}
